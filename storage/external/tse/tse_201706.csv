title,abstract
A Taxonomy and Qualitative Comparison of Program Analysis Techniques for Security Assessment of Android Software,"Abstract In parallel with the meteoric rise of mobile software, we are witnessing an alarming escalation in the number and sophistication of the security threats targeted at mobile platforms, particularly Android, as the dominant platform. While existing research has made significant progress towards detection and mitigation of Android security, gaps and challenges remain. This paper contributes a comprehensive taxonomy to classify and characterize the state-of-the-art research in this area. We have carefully followed the systematic literature review process, and analyzed the results of more than 300 research papers, resulting in the most comprehensive and elaborate investigation of the literature in this area of research. The systematic analysis of the research literature has revealed patterns, trends, and gaps in the existing literature, and underlined key challenges and opportunities that will shape the focus of future research efforts.Keywords Androids, Humanoid Robots, Security, Taxonomy, Mobile Communication, Malware, Systematics, Taxonomy And Survey, Security Assessment, Android Platform, Program Analysis"
The Value of Exact Analysis in Requirements Selection,"Keywords Decision Support Systems, Formal Specification, Requirements Engineering Decision Support, METRO, Next Release Problem, Algorithmic Uncertainty Management, Requirements Uncertainty Management, Exact NRP Solver, NSGDP, NRP Solvers, Optimal Solutions, Inexact Requirement Selection Decisions, RALIC Dataset, Uncertainty, Stakeholders, Robustness, Optimization, Software, Software Engineering, Software Algorithms, Software Engineering, Exact Multi Objective Optimisation, Simulation Optimisation, Next Release Problem"
Online Reliability Prediction via Motifs-Based Dynamic Bayesian Networks for Service-Oriented Systems,"Abstract A service-oriented System of Systems (SoS) considers a system as a service and constructs a robust and value-added SoS by outsourcing external component systems through service composition techniques. Online reliability prediction for the component systems for the purpose of assuring the overall Quality of Service (QoS) is often a major challenge in coping with a loosely coupled SoS operating under dynamic and uncertain running environments. It is also a prerequisite for guaranteeing runtime QoS of a SoS through optimal service selection for reliable system construction. We propose a novel online reliability time series prediction approach for the component systems in a service-oriented SoS. We utilize Probabilistic Graphical Models (PGMs) to yield near-future, time series predictions. We assess the approach via invocation records collected from widely used real Web services. Experimental results have confirmed the effectiveness of the approach.Keywords Time Series Analysis, Quality Of Service, Web Services, Throughput, Software Reliability, Time Factors, Online Reliability Prediction, Time Series, Service Oriented Computing, System Of Systems"
Automated Steering of Model-Based Test Oracles to Admit Real Program Behaviors,"Abstract The test oracle—a judge of the correctness of the system under test (SUT)—is a major component of the testing process. Specifying test oracles is challenging for some domains, such as real-time embedded systems, where small changes in timing or sensory input may cause large behavioral differences. Models of such systems, often built for analysis and simulation, are appealing for reuse as test oracles. These models, however, typically represent an idealized system, abstracting away certain issues such as non-deterministic timing behavior and sensor noise. Thus, even with the same inputs, the model's behavior may fail to match an acceptable behavior of the SUT, leading to many false positives reported by the test oracle. We propose an automated steering framework that can adjust the behavior of the model to better match the behavior of the SUT to reduce the rate of false positives. This model steering is limited by a set of constraints (defining the differences in behavior that are acceptable) and is based on a search process attempting to minimize a dissimilarity metric. This framework allows non-deterministic, but bounded, behavioral differences, while preventing future mismatches by guiding the oracle—within limits—to match the execution of the SUT. Results show that steering significantly increases SUT-oracle conformance with minimal masking of real faults and, thus, has significant potential for reducing false positives and, consequently, testing and debugging costs while improving the quality of the testing process.Keywords Testing, Analytical Models, Computational Modeling, Software, Delays, Hardware, Pacemakers, Software Testing, Test Oracles, Model Based Testing, Model Based Development, Verification"
