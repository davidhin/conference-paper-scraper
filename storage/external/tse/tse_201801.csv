title,abstract
Editorial from the New Editor in Chief,"Abstract Presents the introductory editorial for this issue of the publication.     Taking over for Matt Dwyer as TSE 's Editor-in-Chief (EIC) is a great honor and an even greater responsibility. Matt steps down with TSE firmly established as the premier software engineering research journal. At the same time, several challenges remain, not the least of which is the fact that the publishing trends in software engineering currently favor conferences at the expense of journals. There are several reasons behind this. Some of them are legitimate: Regular submission cycles, relatively quick decision and feedback, and preset deadlines are appealing, and they help to maintain a vibrant, growing research community in a rapidly moving field. Other reasons are not as laudable, nor are they good for the long-term health of the community in my view: Despite the low acceptance rates of top conferences and high quality of submissions they receive, conferences inherently attract more incremental work. It is useful and important for such work to be shared on a regular basis — we all benefit from it and our field advances. It is unhealthy, however, if it results in a wholesale shift of research foci and priorities to problems that are easier to attack, for which results can be obtained more quickly and straightforwardly, and which are incremental without exception (“software engineering under the lamppost”). Under Matt's leadership, TSE has taken important steps in the past couple of years to address this problem. Its streamlining of the review and publication cycle yields paper-decision timelines that, on average, are comparable to the paper-publication timelines of the top conferences. The “journal-first” effort has made publishing original results in TSE significantly more attractive. A large proportion of TSE submissions now consists of work that did not previously appear in a conference. By affording authors of such papers the opportunity to present their work at top conferences, TSE has combined the depth of research questions and results expected of a TSE paper with the visibility afforded by top-conference paper presentations. These efforts must be continued, and expanded (presenting more papers at more conferences). At the same time, these efforts are limited in two ways. First, they are trying to leverage the strengths of conferences to entice authors to submit their best work to TSE , but they are not harnessing some of the inherent advantages of a flagship journal such as TSE to set the community's agenda. Second, these efforts still do not address the needs of a large proportion of TSE authors—those whose submissions are significant, sometimes fundamental, extensions of previously published work—who often still face the prospect of producing a “write-only” publication. My goal as TSE 's EIC would be to continue and reinforce TSE 's currently successful activities, while working on addressing the above limitations. Specifically, I plan to initially explore four avenues: formation of a standing committee of reviewers; introduction of a TSE “best paper” award; establishment of a TSE webinar series; and refashioning of TSE 's website. I will briefly elaborate on each initiative next. Reviewer Committee – Under Matt's leadership, the TSE Editorial Board has been able to shorten the publication cycle significantly. I believe that it is possible to reduce it further, while enticing qualified reviewers to commit their time more formally. To this end, at the time of appointment and subsequently once per year, every Associate Editor (AE) will be asked to come up with a list of 5-7 potential reviewers, which will form a “mini-committee” in the AE's area. Once vetted and approved by the EiC and the Editorial Board, these reviewers will be invited to be a part of TSE 's standing “program” committee. The standing committee members will be expected to dedicate a portion of their time to reviewing a given number of papers during their tenure on the committee. This will not preclude an AE from looking for additional reviewers outside the standing committee if a submission requires it. But it will have the dual benefit of (1) having qualified reviewers “on stand-by”, therefore expediting the review cycle, and (2) having the reviewers treat TSE papers with the same urgency they would, e.g., an ICSE or FSE paper – and in turn getting commensurate visibility and credit for it. Best Papers – I already noted that TSE is the premier research journal in software engineering. As such, it attracts some of the very best and most complete work in our field. Yet, unlike the papers that appear in software engineering conferences, the best papers published in TSE are not recognized. ACM SIGSOFT has tried to address this issue at least indirectly for the ACM journals, through the introduction of the ACM SIGSOFT Impact Paper Award. Put simply, TSE needs a “best paper” award. The idea is to give a small number of such awards annually, and for all papers (both “journal-first” and regular) published in TSE in a given year to qualify for the award. The exact details would be determined in discussions with the Editorial Board. The prospect of receiving such an award will hopefully serve as an added enticement for researchers to regularly submit their best work to TSE . Weekly Webinars – A typical ICSE presentation is seen by around 100 people; a particularly interesting and timely paper may attract an audience of 200 or, in rare instances, 300. Yet ours is a huge community, numbering in the thousands. As part of my charge as current Chair of ACM SIGSOFT, I have overseen the expansion of SIGSOFT's Webinar series. This has been a very successful way for software engineering researchers to present their work to a large audience. It is not uncommon for a SIGSOFT Webinar talk to attract 1,000 or more virtual attendees. Regularly disseminating the published work in an analogous manner is a big opportunity for TSE , and it will be complementary with the “journal-first” efforts. First, it will expand the audience for TSE papers. Second, it will expand the number of papers that can be presented this way and will include work that currently does not qualify under the “journal-first” rules. Third, and perhaps most importantly, it will keep TSE on everyone's “radar screens” on a regular basis. Website – The current TSE website is mostly a passive portal for accessing papers. This is a missed opportunity. The site needs to evolve into an active community portal where the work described in the papers can be discussed, details clarified, results extended, and data and code made available, so that a paper's contributions can be independently confirmed and, if appropriate, refuted. Not only is this a more appropriate way of treating published results, but it also has the benefit of creating the network effect, where researchers will flock to the TSE site and visit it regularly because of important discussions on, both, their own work and the work on which they are relying. This effort will be in addition and complementary to the on-going efforts to increase TSE 's social-media presence. The recently introduced position of TSE Information Director will naturally include this responsibility. Undoubtedly, these are just some of the ways in which the long-term health of TSE can be ensured. I am very much looking forward to continuing to work with and learn from Matt and the current Editorial Board about the journal, what has worked well, what could be improved, and how best to make it happen."
State of the Journal,"Abstract Presents the state of the journal for this issue of the publication.    Over and Next Over the past four years the editorial board of TSE has worked to identify and address challenges and opportunities in the publication of research contributions in the field of software engineering. As we have reported in prior editorials, TSE has made consistent and substantial progress in reducing the time to review submitted manuscripts and has helped to create the successful, and growing, “journal first” publication model in software engineering. These efforts have been the product of thousands of hours of volunteer effort on the part of the dedicated editorial board and reviewer community who support TSE . Space does not allow for thanking each of them in person, but we would like to express our thanks to John Grundy and Jane Cleland-Huang who served as Associate Editor-in-Chiefs for TSE over the past four years. They have been invaluable contributors in advancing TSE . In all of our work, we have maintained the perspective that TSE serves the software engineering community. We have worked with partners at other journals, in the professional organizations, and in conference organizing committees to develop approaches that work well for the large, and complex, software engineering publication ecosystem. The steps we have made put the community in a position to move forward to create a more diverse and inclusive system for disseminating world-class research results and we hope that the entire community will work to advance our collective interests with a similar sense of service. Next up as TSE Editor-in-Chief is Professor Nenad Medvidović. Neno's record as a tireless contributor to the community over the past decade serving as Program co-Chair of ICSE, Steering Committee Chair of ICSE, Chair of the ACM Special Interest Group on Software Engineering (SIGSOFT), and on the editorial boards of TSE and ACM TOSEM demonstrates his deep commitment to serving the software engineering community. His experience working with the two most prominent professional organizations that sponsor conferences and journals in software engineering puts him in a unique position to address changes to publication processes and practices that our field is experiencing. Professor Medvidović is a world-class scholar and has been a pioneer in advancing research on architecture-based solutions to software development challenges. His experience as an accomplished and widely published author will inform his leadership of TSE and drive it to be an increasingly valuable resource for the software engineering community.    People Make TSE Work The associate editors of TSE play a critical role. They assess manuscripts to make judgments about their appropriateness for the journal. When appropriate they commission a set of reviews from experts in the field. Perhaps most critically when reviews are returned they interpret and synthesize the set of reviews to provide a coherent message and judgment to the authors about their paper. In 2017 the following members of the editorial board retired after their term of service: Robyn Lutz, Mauro Pezze, Rob Deline, Audris Mockus, Gail Murphy, Paolo Tonella, Helen Sharp, Gian Pietro Picco, Jo Atlee, Margaret Burnett, Ahmed Hassan, Andreas Zeller, and Zhenjiang Hu. We thank each of them for the many hundreds of hours of volunteer effort they contributed to bettering the field of software engineering. We also encourage you to thank them for their service to the international software engineering research community when next you cross paths with them. In 2017 TSE has been fortunate to add the following highly accomplished researchers as Associate Editors: Mike Whalen, Gordon Fraser, Reid Holmes, Koushik Sen, Andrew Begel, Jeff Carver, Valerie Issarny, Victor Braberman, Carolyn Seaman, Sven Apel, Xiangyu Zhang, Emerson Murphy-Hill, Lin Tan, Ali Mesbah, Hridesh Rajan, and Denys Poshyvanyk. We know that their efforts will enhance the review process at TSE . Nenad Medvidović received the PhD degree in information and computer science from the University of California, Irvine, in 1999. He is a professor in the Computer Science Department and in the Informatics Program, University of Southern California. He is the founding director of the SoftArch Laboratory at USC. He has previously served as Director of the USC Center for Systems and Software Engineering (2009-2013), associate chair for Ph.D. Affairs in USC's CS Department (2011-2015), and chair of the Steering Committee for the International Conference on Software Engineering (2013-2015). He was the program co-chair of ICSE 2011. He is currently serving as chair of the ACM Special Interest Group on Software Engineering (SIGSOFT). He has served or is currently serving as an associate editor of a number of journals, including the two flagship software engineering journals: the IEEE Transactions on Software Engineering (2010-2014) and the ACM Transactions on Software Engineering and Methodology (2014-present). He is a recipient of the National Science Foundation CAREER (2000) award, the Okawa Foundation Research Grant (2005), the IBM Real-Time Innovation Award (2007), and the USC Mellon Mentoring Award (2010). He is a co-author of the ICSE 1998 paper that was recognized as that conference's Most Influential Paper. His work has won several additional “Best Paper” awards. His research interests are in the area of architecture-based software development. He is a co-author of a textbook on software architectures. He is an ACM distinguished scientist and a fellow of the IEEE."
A Developer Centered Bug Prediction Model,"Abstract Several techniques have been proposed to accurately predict software defects. These techniques generally exploit characteristics of the code artefacts (e.g., size, complexity, etc.) and/or of the process adopted during their development and maintenance (e.g., the number of developers working on a component) to spot out components likely containing bugs. While these bug prediction models achieve good levels of accuracy, they mostly ignore the major role played by human-related factors in the introduction of bugs. Previous studies have demonstrated that focused developers are less prone to introduce defects than non-focused developers. According to this observation, software components changed by focused developers should also be less error prone than components changed by less focused developers. We capture this observation by measuring the scattering of changes performed by developers working on a component and use this information to build a bug prediction model. Such a model has been evaluated on 26 systems and compared with four competitive techniques. The achieved results show the superiority of our model, and its high complementarity with respect to predictors commonly used in the literature. Based on this result, we also show the results of a “hybrid” prediction model combining our predictors with the existing ones.Keywords Measurement, Computer Bugs, Predictive Models, Complexity Theory, Scattering, Entropy, Software, Scattering Metrics, Bug Prediction, Empirical Study, Mining Software Repositories"
Eliminating Path Redundancy via Postconditioned Symbolic Execution,"Abstract Symbolic execution is emerging as a powerful technique for generating test inputs systematically to achieve exhaustive path coverage of a bounded depth. However, its practical use is often limited by path explosion because the number of paths of a program can be exponential in the number of branch conditions encountered during the execution. To mitigate the path explosion problem, we propose a new redundancy removal method called postconditioned symbolic execution. At each branching location, in addition to determine whether a particular branch is feasible as in traditional symbolic execution, our approach checks whether the branch is subsumed by previous explorations. This is enabled by summarizing previously explored paths by weakest precondition computations. Postconditioned symbolic execution can identify path suffixes shared by multiple runs and eliminate them during test generation when they are redundant. Pruning away such redundant paths can lead to a potentially exponential reduction in the number of explored paths. Since the new approach is computationally expensive, we also propose several heuristics to reduce its cost. We have implemented our method in the symbolic execution engine KLEE [1] and conducted experiments on a large set of programs from the GNU Coreutils suite. Our results confirm that redundancy due to common path suffix is both abundant and widespread in real-world applications.Keywords Concrete, Explosions, Input Variables, Redundancy, Software, Syntactics, Testing, Symbolic Execution, Testing And Debugging, Testing Tools"
Empirical Evaluation of the Impact of Object-Oriented Code Refactoring on Quality Attributes: A Systematic Literature Review,"Abstract Software refactoring is a maintenance task that addresses code restructuring to improve its quality. Many studies have addressed the impact of different refactoring scenarios on software quality. This study presents a systematic literature review that aggregates, summarizes, and discusses the results of 76 relevant primary studies (PSs) concerning the impact of refactoring on several internal and external quality attributes. The included PSs were selected using inclusion and exclusion criteria applied to relevant articles published before the end of 2015. We analyzed the PSs based on a set of classification criteria, including software quality attributes and measures, refactoring scenarios, evaluation approaches, datasets, and impact results. We followed the vote-counting approach to determine the level of consistency among the PS reported results concerning the relationship between refactoring and software quality. The results indicated that different refactoring scenarios sometimes have opposite impacts on different quality attributes. Therefore, it is false that refactoring always improves all software quality aspects. The vote-counting study provided a clear view of the impacts of some individual refactoring scenarios on some internal quality attributes such as cohesion, coupling, complexity, inheritance, and size, but failed to identify their impacts on external and other internal quality attributes due to insufficient findings.Keywords Software Quality, Systematics, Unified Modeling Language, Bibliographies, Libraries, Object Oriented Modeling, Quality Attribute, Quality Measure, Refactoring Scenario, Systematic Literature Review"
Test Case Generation for Boolean Expressions by Cell Covering,"Abstract This paper characterizes Boolean expression faults as changes of the topological structures in terms of shrinking and/or expanding regions in K-map. A cell-covering is a set of cells (test cases) in K-map to cover the fault regions such that faults guarantee to be detected. Minimizing cell covering can be formulated as an Integer Linear Programming (ILP) problem. By analyzing the structures of the constraint coefficient matrix, the original problem can be decomposed into sub-programs that can be solved instead of the original problem, and this significantly reduces the time needed for ILP execution. An efficient approximate algorithm with a tight theoretical bound is used to address those complex Boolean expressions by corresponding the cell-covering problem to the set-covering problem. The optimal approach and the approximate approach are combined into a hybrid process to identify test cases based on the fraction analysis on the ILP relaxation. The proposed approach is evaluated by three sets of Boolean expressions and the results are compared with three leading approaches with respect to test sizes, time consumption and fault detection capabilities. For most Boolean expressions encountered, the proposed approach obtains optimal solutions quickly, and produces near-optimal solutions rapidly for those rare and complex expressions.Keywords Fault Detection, Approximation Algorithms, Optimization, Periodic Structures, Algorithm Design And Analysis, Testing, Software, Boolean Expression Testing, Fault Characterization, Cell Covering Problem, Approximate Algorithms"
2017 Reviewers List*,Abstract Presents a list of reviewers who contributed to this publication in 2017.Keywords IEEE Publishing
2017 Index IEEE Transactions on Software Engineering Vol. 43,"Abstract Presents the 2017 subject/author index for this publication.    Over and Next Over the past four years the editorial board of TSE has worked to identify and address challenges and opportunities in the publication of research contributions in the field of software engineering. As we have reported in prior editorials, TSE has made consistent and substantial progress in reducing the time to review submitted manuscripts and has helped to create the successful, and growing, “journal first” publication model in software engineering. These efforts have been the product of thousands of hours of volunteer effort on the part of the dedicated editorial board and reviewer community who support TSE . Space does not allow for thanking each of them in person, but we would like to express our thanks to John Grundy and Jane Cleland-Huang who served as Associate Editor-in-Chiefs for TSE over the past four years. They have been invaluable contributors in advancing TSE . In all of our work, we have maintained the perspective that TSE serves the software engineering community. We have worked with partners at other journals, in the professional organizations, and in conference organizing committees to develop approaches that work well for the large, and complex, software engineering publication ecosystem. The steps we have made put the community in a position to move forward to create a more diverse and inclusive system for disseminating world-class research results and we hope that the entire community will work to advance our collective interests with a similar sense of service. Next up as TSE Editor-in-Chief is Professor Nenad Medvidović. Neno's record as a tireless contributor to the community over the past decade serving as Program co-Chair of ICSE, Steering Committee Chair of ICSE, Chair of the ACM Special Interest Group on Software Engineering (SIGSOFT), and on the editorial boards of TSE and ACM TOSEM demonstrates his deep commitment to serving the software engineering community. His experience working with the two most prominent professional organizations that sponsor conferences and journals in software engineering puts him in a unique position to address changes to publication processes and practices that our field is experiencing. Professor Medvidović is a world-class scholar and has been a pioneer in advancing research on architecture-based solutions to software development challenges. His experience as an accomplished and widely published author will inform his leadership of TSE and drive it to be an increasingly valuable resource for the software engineering community.    People Make TSE Work The associate editors of TSE play a critical role. They assess manuscripts to make judgments about their appropriateness for the journal. When appropriate they commission a set of reviews from experts in the field. Perhaps most critically when reviews are returned they interpret and synthesize the set of reviews to provide a coherent message and judgment to the authors about their paper. In 2017 the following members of the editorial board retired after their term of service: Robyn Lutz, Mauro Pezze, Rob Deline, Audris Mockus, Gail Murphy, Paolo Tonella, Helen Sharp, Gian Pietro Picco, Jo Atlee, Margaret Burnett, Ahmed Hassan, Andreas Zeller, and Zhenjiang Hu. We thank each of them for the many hundreds of hours of volunteer effort they contributed to bettering the field of software engineering. We also encourage you to thank them for their service to the international software engineering research community when next you cross paths with them. In 2017 TSE has been fortunate to add the following highly accomplished researchers as Associate Editors: Mike Whalen, Gordon Fraser, Reid Holmes, Koushik Sen, Andrew Begel, Jeff Carver, Valerie Issarny, Victor Braberman, Carolyn Seaman, Sven Apel, Xiangyu Zhang, Emerson Murphy-Hill, Lin Tan, Ali Mesbah, Hridesh Rajan, and Denys Poshyvanyk. We know that their efforts will enhance the review process at TSE . Nenad Medvidović received the PhD degree in information and computer science from the University of California, Irvine, in 1999. He is a professor in the Computer Science Department and in the Informatics Program, University of Southern California. He is the founding director of the SoftArch Laboratory at USC. He has previously served as Director of the USC Center for Systems and Software Engineering (2009-2013), associate chair for Ph.D. Affairs in USC's CS Department (2011-2015), and chair of the Steering Committee for the International Conference on Software Engineering (2013-2015). He was the program co-chair of ICSE 2011. He is currently serving as chair of the ACM Special Interest Group on Software Engineering (SIGSOFT). He has served or is currently serving as an associate editor of a number of journals, including the two flagship software engineering journals: the IEEE Transactions on Software Engineering (2010-2014) and the ACM Transactions on Software Engineering and Methodology (2014-present). He is a recipient of the National Science Foundation CAREER (2000) award, the Okawa Foundation Research Grant (2005), the IBM Real-Time Innovation Award (2007), and the USC Mellon Mentoring Award (2010). He is a co-author of the ICSE 1998 paper that was recognized as that conference's Most Influential Paper. His work has won several additional “Best Paper” awards. His research interests are in the area of architecture-based software development. He is a co-author of a textbook on software architectures. He is an ACM distinguished scientist and a fellow of the IEEE."
