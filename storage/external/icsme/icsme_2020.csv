title,abstract
GenSlice: Generalized Semantic History Slicing,
Commit-Aware Mutation Testing,
Effects of Adopting Code Review Bots on Pull Requests to OSS Projects,
"An Empirical Study of Usages, Updates and Risks of Third-Party Libraries in Java Projects",
Experiments with Interactive Fault Localization using Simulated and Real Users,
Pizza versus Pinsa: On the Perception and Measurability of Unit Test Code Quality,
CounterFault: Value-Based Fault Localization by Modeling and Predicting Counterfactual Outcomes,
Remote Pair Programming in Virtual Reality,
A Cost-Effective Approach for Hyper-Parameter Tuning in Search-based Test Case Generation,
Automated Recording and Semantics-Aware Replaying of High-Speed Eye Tracking and Interaction Data to Support Cognitive Studies of Software Engineering Tasks,
"Revisiting Test Smells in Automatically Generated Tests: Limitations, Pitfalls, and Opportunities",
Why Are Some Bugs Non-Reproducible? An Empirical Investigation using Data Fusion,
Database-Access Performance Antipatterns in Database-Backed Web Applications,
A First Look at the Deprecation of RESTful APIs: An Empirical Study,
Every Mutation Should Be Rewarded: Boosting Fault Localization with Mutated Predicates,
#ifdef Directives and Program Comprehension: The Dilemma between Correctness and Preference,
Evaluating Code Readability and Legibility: An Examination of Human-centric Studies,
What Developers (Care to) Recall: An Interview Survey on Smaller Systems,
Automated Extraction of Requirement Entities by Leveraging LSTM-CRF and Transfer Learning,
A Fine-Grained Analysis on the Inconsistent Changes in Code Clones,
An Empirical Study of the Dependency Networks of Deep Learning Libraries,
It Takes a Village to Build a Robot: An Empirical Study of The ROS Ecosystem,
Assessing Mock Classes: An Empirical Study,
Expanding the Number of Reviewers in Open-Source Projects by Recommending Appropriate Developers,
How Does Modern Code Review Impact Software Design Degradation? An In-depth Empirical Study,
Improving Automated GUI Exploration of Android Apps via Static Dependency Analysis,
An Empirical Study of i18n Collateral Changes and Issues in GUIs of Android apps,
Interest of Defect Technical Debt: An Exploratory Study on Apache Projects,
Automated Test Generation for Speech Recognition Systems using Text-To-Speech,
Haste Makes Waste: An Empirical Study of Fast Answers in Stack Overflow,
Achieving Reliable Sentiment Analysis in the Software Engineering Domain using BERT,
A Large-scale Data Set and an Empirical Study of Docker Images Hosted on Docker Hub,
Characterizing Task-Relevant Information in Natural Language Software Artifacts,
On the Performance and Adoption of Search-Based Microservice Identification with toMicroservices,
Can You Capture Information As You Intend To? A Case Study on Logging Practice in Industry,
Analysis of Modern Release Engineering Topics – A Large-Scale Study using StackOverflow –,
Learning Code-Query Interaction for Enhancing Code Searches,
A Framework and Data Set for Bugs in Ethereum Smart Contracts,
509 Certificate Validation via Coverage Transfer Graphs,
Introducing Differential Privacy Mechanisms for Mobile App Analytics of Dynamic Content,
Shake It! Detecting Flaky Tests Caused by Concurrency with Shaker,
Assessing the Characteristics of FOSS Contributions in Network Automation Projects,
Improving Testing by Mimicking User Behavior,
Sentiment Analysis for Software Engineering: How Far Can Pre-trained Transformer Models Go?,
Failures and Fixes: A Study of Software System Incident Response,
A software maintenance-focused process and supporting toolset for academic environments,
"How (Not) to Find Bugs: The Interplay Between Merge Conflicts, Co-Changes, and Bugs",
Lifting the Curtain on Merge Conflict Resolution: A Sensemaking Perspective,
Static source code metrics and static analysis warnings for fine-grained just-in-time defect prediction,
Studying Software Developer Expertise and Contributions in Stack Overflow and GitHub,
A Method for Finding Missing Unit Tests,
Detecting Semantic Conflicts Via Automated Behavior Change Detection,
Identifying Compiler and Optimization Options from Binary Code using Deep Learning Approaches,
"Defining a Software Maintainability Dataset: Collecting, Aggregating and Analysing Expert Evaluations of Software Maintainability",
On the Impact of Multi-language Development in Machine Learning Frameworks,
AOBTM: Adaptive Online Biterm Topic Modeling for Version Sensitive Short-texts Analysis,
A3IDENT: A Two-phased Approach to Identify the Leading Authors of Android Apps,
Score-Based Automatic Detection and Resolution of Syntactic Ambiguity in Natural Language Requirements,
